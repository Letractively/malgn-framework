#summary [자바기초] 0. 용어정리

===클래스(Class)===
객체지향 프로그래밍(OOP)에서 클래스란 특정 객체를 생성하기 위한 틀로서 실제 코드상으로는 그 객체의 변수와 메쏘드로 정의된다.
클래스는 OOP를 정의하는 개념 중 하나인데, 클래스에 대한 중요한 몇가지의 개념들은 다음과 같다.

 * 클래스는 다른 클래스에서 상속이 가능하며 이때 전부 혹은 일부의 프로퍼티와 메소드를 서브클래스에서 재사용할 수 있다.
 * 서브클래스는 자신만의 메쏘드와 변수를 정의할 수도 있다.
 * 클래스와 그 서브클래스 간의 구조를 "클래스 계층(hierarchy)"이라 한다.



===프로퍼티(Property)===
프로퍼티란 대개 어떤 객체의 특성을 가리킨다. 프로그래밍에서는 객체의 변수를 말한다. 프로퍼티는 일반적인 데이타 타입의 변수 일수 있고 또 다른 객체 타입의 변수일수도 있다.



===메쏘드(Method)===
객체지향 프로그래밍(OOP)에서 메쏘드는 클래스의 일부분으로 정의되며 쉽게 이야기하면 클래스 내장함수라고 말할 수 있다. 클래스(즉 객체)는 하나 이상의 메쏘드를 가질 수 있으며 외부에서 접근이 가능한 메소드(Public Method)와 클래스 내부에서만 접근이 가능한 메소드(Private Method)로 구분된다. 또한 클래스의 메소드는 객체생성 이후에만 사용가능한 메쏘드와 객체생성 없이 사용 가능한 메쏘드(Static Method)가 있다.



===객체(Object)===
(출처 : http://blog.daum.net/_blog/BlogTypeView.do?blogid=03gu8&articleno=24#ajax_history_home)
객체(Objects) 는 객체지향(Oriented-Object) 기술을 이해하기 위한 핵심 개념이다. 주위를 둘러보면 실제 세계의 객체들을 많이 찾아 볼 수 있다. 주로 강아지, 책상, 텔레비전, 자전거 등과 같은 것 들이다.
 
이러한 실세계의 객체들은 두가지 특징을 가지고 있는데 바로 상태(State) 와 행동(Behavior) 을 가진다는 것이다. 예를 들어, 강아지는 이름, 색, 품종, 배고파함 등의 상태를 가지고 있으며, 짖다, 물어오다(Fetching), 꼬리를 흔들다 등의 행동들을 가지고 있다. 또 다른 예로 자전거라는 객체는 현재 기어, 현재 패달의 회전 속도, 바퀴 갯수, 기어의 단계수 등의 상태와 멈추다, 가속하다, 천천히 감속하다, 기어를 바꾸다 등의 행동을 가지고 있다.
 
소프트웨어 객체는 실세계 객체를 바탕으로 모델링되어 진다. 소프트웨어 객체는 상태를 나타내기 위해 한개나 그 이상의 변수(Variables)들을 사용하며 행동들은 메서드(Method)로 표현된다. 메서드들을 다른 말로 하면 객체와 관련된 함수(서브루틴)라고 할 수 있다.
 
{{{객체란 변수들과 그와 관련된 메서드들이 모여서 이룬 하나의 꾸러미이다.}}}